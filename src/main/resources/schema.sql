CREATE TABLE IF NOT EXISTS genres (
	genre_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	genre_name VARCHAR(32) NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS rating_mpa (
	mpa_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	mpa_name VARCHAR(16) NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS films (
	film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_name VARCHAR(64) NOT NULL,
	description VARCHAR(255) NOT NULL,
	release_date DATE NOT NULL,
	duration INTEGER NOT NULL,
	mpa_id BIGINT REFERENCES rating_mpa (mpa_id) ON DELETE SET NULL
);
CREATE TABLE IF NOT EXISTS users (
	user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email VARCHAR(64) NOT NULL UNIQUE,
	login VARCHAR(64) NOT NULL UNIQUE,
	name VARCHAR(64) NOT NULL,
	birthday DATE
);

CREATE TABLE IF NOT EXISTS films_genres (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_id BIGINT NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
	genre_id BIGINT NOT NULL REFERENCES genres (genre_id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS likes (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_id BIGINT NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
	user_id BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS friendship (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
	friend_id BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
	status VARCHAR(32) NOT NULL CHECK (status IN ('UNCONFIRMED', 'CONFIRMED'))
);